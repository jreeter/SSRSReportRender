//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSRSReporting.Execution {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", ConfigurationName="Execution.ReportExecutionServiceSoap")]
    public interface ReportExecutionServiceSoap {
        
        // CODEGEN: Generating message contract since message ListSecureMethodsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Lis" +
            "tSecureMethods", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.ListSecureMethodsResponse ListSecureMethods(SSRSReporting.Execution.ListSecureMethodsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Lis" +
            "tSecureMethods", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.ListSecureMethodsResponse> ListSecureMethodsAsync(SSRSReporting.Execution.ListSecureMethodsRequest request);
        
        // CODEGEN: Generating message contract since message LoadReportRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.LoadReportResponse LoadReport(SSRSReporting.Execution.LoadReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LoadReportResponse> LoadReportAsync(SSRSReporting.Execution.LoadReportRequest request);
        
        // CODEGEN: Generating message contract since message LoadReport2Request has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.LoadReport2Response LoadReport2(SSRSReporting.Execution.LoadReport2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReport2", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LoadReport2Response> LoadReport2Async(SSRSReporting.Execution.LoadReport2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.LoadReportDefinitionResponse LoadReportDefinition(SSRSReporting.Execution.LoadReportDefinitionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LoadReportDefinitionResponse> LoadReportDefinitionAsync(SSRSReporting.Execution.LoadReportDefinitionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.LoadReportDefinition2Response LoadReportDefinition2(SSRSReporting.Execution.LoadReportDefinition2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dReportDefinition2", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LoadReportDefinition2Response> LoadReportDefinition2Async(SSRSReporting.Execution.LoadReportDefinition2Request request);
        
        // CODEGEN: Generating message contract since message SetExecutionCredentialsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.SetExecutionCredentialsResponse SetExecutionCredentials(SSRSReporting.Execution.SetExecutionCredentialsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionCredentialsResponse> SetExecutionCredentialsAsync(SSRSReporting.Execution.SetExecutionCredentialsRequest request);
        
        // CODEGEN: Generating message contract since message SetExecutionCredentials2Request has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.SetExecutionCredentials2Response SetExecutionCredentials2(SSRSReporting.Execution.SetExecutionCredentials2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionCredentials2", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionCredentials2Response> SetExecutionCredentials2Async(SSRSReporting.Execution.SetExecutionCredentials2Request request);
        
        // CODEGEN: Generating message contract since message SetExecutionParametersRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.SetExecutionParametersResponse SetExecutionParameters(SSRSReporting.Execution.SetExecutionParametersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionParametersResponse> SetExecutionParametersAsync(SSRSReporting.Execution.SetExecutionParametersRequest request);
        
        // CODEGEN: Generating message contract since message SetExecutionParameters2Request has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.SetExecutionParameters2Response SetExecutionParameters2(SSRSReporting.Execution.SetExecutionParameters2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Set" +
            "ExecutionParameters2", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionParameters2Response> SetExecutionParameters2Async(SSRSReporting.Execution.SetExecutionParameters2Request request);
        
        // CODEGEN: Generating message contract since message ResetExecutionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.ResetExecutionResponse ResetExecution(SSRSReporting.Execution.ResetExecutionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.ResetExecutionResponse> ResetExecutionAsync(SSRSReporting.Execution.ResetExecutionRequest request);
        
        // CODEGEN: Generating message contract since message ResetExecution2Request has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.ResetExecution2Response ResetExecution2(SSRSReporting.Execution.ResetExecution2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Res" +
            "etExecution2", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.ResetExecution2Response> ResetExecution2Async(SSRSReporting.Execution.ResetExecution2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "der", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.RenderResponse Render(SSRSReporting.Execution.RenderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "der", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.RenderResponse> RenderAsync(SSRSReporting.Execution.RenderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "der2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.Render2Response Render2(SSRSReporting.Execution.Render2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "der2", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.Render2Response> Render2Async(SSRSReporting.Execution.Render2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "derStream", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.RenderStreamResponse RenderStream(SSRSReporting.Execution.RenderStreamRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Ren" +
            "derStream", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.RenderStreamResponse> RenderStreamAsync(SSRSReporting.Execution.RenderStreamRequest request);
        
        // CODEGEN: Generating message contract since message GetExecutionInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.GetExecutionInfoResponse GetExecutionInfo(SSRSReporting.Execution.GetExecutionInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.GetExecutionInfoResponse> GetExecutionInfoAsync(SSRSReporting.Execution.GetExecutionInfoRequest request);
        
        // CODEGEN: Generating message contract since message GetExecutionInfo2Request has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.GetExecutionInfo2Response GetExecutionInfo2(SSRSReporting.Execution.GetExecutionInfo2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "ExecutionInfo2", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.GetExecutionInfo2Response> GetExecutionInfo2Async(SSRSReporting.Execution.GetExecutionInfo2Request request);
        
        // CODEGEN: Generating message contract since message GetDocumentMapRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "DocumentMap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.GetDocumentMapResponse GetDocumentMap(SSRSReporting.Execution.GetDocumentMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "DocumentMap", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.GetDocumentMapResponse> GetDocumentMapAsync(SSRSReporting.Execution.GetDocumentMapRequest request);
        
        // CODEGEN: Generating message contract since message LoadDrillthroughTargetRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.LoadDrillthroughTargetResponse LoadDrillthroughTarget(SSRSReporting.Execution.LoadDrillthroughTargetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LoadDrillthroughTargetResponse> LoadDrillthroughTargetAsync(SSRSReporting.Execution.LoadDrillthroughTargetRequest request);
        
        // CODEGEN: Generating message contract since message LoadDrillthroughTarget2Request has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.LoadDrillthroughTarget2Response LoadDrillthroughTarget2(SSRSReporting.Execution.LoadDrillthroughTarget2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Loa" +
            "dDrillthroughTarget2", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LoadDrillthroughTarget2Response> LoadDrillthroughTarget2Async(SSRSReporting.Execution.LoadDrillthroughTarget2Request request);
        
        // CODEGEN: Generating message contract since message ToggleItemRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Tog" +
            "gleItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.ToggleItemResponse ToggleItem(SSRSReporting.Execution.ToggleItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Tog" +
            "gleItem", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.ToggleItemResponse> ToggleItemAsync(SSRSReporting.Execution.ToggleItemRequest request);
        
        // CODEGEN: Generating message contract since message NavigateDocumentMapRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Nav" +
            "igateDocumentMap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.NavigateDocumentMapResponse NavigateDocumentMap(SSRSReporting.Execution.NavigateDocumentMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Nav" +
            "igateDocumentMap", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.NavigateDocumentMapResponse> NavigateDocumentMapAsync(SSRSReporting.Execution.NavigateDocumentMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Nav" +
            "igateBookmark", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.NavigateBookmarkResponse NavigateBookmark(SSRSReporting.Execution.NavigateBookmarkRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Nav" +
            "igateBookmark", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.NavigateBookmarkResponse> NavigateBookmarkAsync(SSRSReporting.Execution.NavigateBookmarkRequest request);
        
        // CODEGEN: Generating message contract since message FindStringRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Fin" +
            "dString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.FindStringResponse FindString(SSRSReporting.Execution.FindStringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Fin" +
            "dString", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.FindStringResponse> FindStringAsync(SSRSReporting.Execution.FindStringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.SortResponse Sort(SSRSReporting.Execution.SortRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.SortResponse> SortAsync(SSRSReporting.Execution.SortRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.Sort2Response Sort2(SSRSReporting.Execution.Sort2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Sor" +
            "t2", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.Sort2Response> Sort2Async(SSRSReporting.Execution.Sort2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "RenderResource", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.GetRenderResourceResponse GetRenderResource(SSRSReporting.Execution.GetRenderResourceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Get" +
            "RenderResource", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.GetRenderResourceResponse> GetRenderResourceAsync(SSRSReporting.Execution.GetRenderResourceRequest request);
        
        // CODEGEN: Generating message contract since message ListRenderingExtensionsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Lis" +
            "tRenderingExtensions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.ListRenderingExtensionsResponse ListRenderingExtensions(SSRSReporting.Execution.ListRenderingExtensionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Lis" +
            "tRenderingExtensions", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.ListRenderingExtensionsResponse> ListRenderingExtensionsAsync(SSRSReporting.Execution.ListRenderingExtensionsRequest request);
        
        // CODEGEN: Generating message contract since message LogonUserResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Log" +
            "onUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.LogonUserResponse LogonUser(SSRSReporting.Execution.LogonUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Log" +
            "onUser", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LogonUserResponse> LogonUserAsync(SSRSReporting.Execution.LogonUserRequest request);
        
        // CODEGEN: Generating message contract since message LogoffResponse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Log" +
            "off", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ParameterValueOrFieldReference))]
        SSRSReporting.Execution.LogoffResponse Logoff(SSRSReporting.Execution.LogoffRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices/Log" +
            "off", ReplyAction="*")]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LogoffResponse> LogoffAsync(SSRSReporting.Execution.LogoffRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class TrustedUserHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private byte[] userTokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=1)]
        public byte[] UserToken {
            get {
                return this.userTokenField;
            }
            set {
                this.userTokenField = value;
                this.RaisePropertyChanged("UserToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class Extension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ExtensionTypeEnum extensionTypeField;
        
        private string nameField;
        
        private string localizedNameField;
        
        private bool visibleField;
        
        private bool isModelGenerationSupportedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ExtensionTypeEnum ExtensionType {
            get {
                return this.extensionTypeField;
            }
            set {
                this.extensionTypeField = value;
                this.RaisePropertyChanged("ExtensionType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LocalizedName {
            get {
                return this.localizedNameField;
            }
            set {
                this.localizedNameField = value;
                this.RaisePropertyChanged("LocalizedName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
                this.RaisePropertyChanged("Visible");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool IsModelGenerationSupported {
            get {
                return this.isModelGenerationSupportedField;
            }
            set {
                this.isModelGenerationSupportedField = value;
                this.RaisePropertyChanged("IsModelGenerationSupported");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum ExtensionTypeEnum {
        
        /// <remarks/>
        Delivery,
        
        /// <remarks/>
        Render,
        
        /// <remarks/>
        Data,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class DocumentMapNode : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string labelField;
        
        private string uniqueNameField;
        
        private DocumentMapNode[] childrenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
                this.RaisePropertyChanged("Label");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UniqueName {
            get {
                return this.uniqueNameField;
            }
            set {
                this.uniqueNameField = value;
                this.RaisePropertyChanged("UniqueName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public DocumentMapNode[] Children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
                this.RaisePropertyChanged("Children");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParameterValue))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ParameterValueOrFieldReference : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ParameterValue : ParameterValueOrFieldReference {
        
        private string nameField;
        
        private string valueField;
        
        private string labelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
                this.RaisePropertyChanged("Label");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class DataSourceCredentials : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dataSourceNameField;
        
        private string userNameField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class Warning : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string severityField;
        
        private string objectNameField;
        
        private string objectTypeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
                this.RaisePropertyChanged("Severity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
                this.RaisePropertyChanged("ObjectName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
                this.RaisePropertyChanged("ObjectType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ExecutionHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string executionIDField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ExecutionID {
            get {
                return this.executionIDField;
            }
            set {
                this.executionIDField = value;
                this.RaisePropertyChanged("ExecutionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ReportMargins : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double topField;
        
        private double bottomField;
        
        private double leftField;
        
        private double rightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public double Top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
                this.RaisePropertyChanged("Top");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double Bottom {
            get {
                return this.bottomField;
            }
            set {
                this.bottomField = value;
                this.RaisePropertyChanged("Bottom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double Left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
                this.RaisePropertyChanged("Left");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double Right {
            get {
                return this.rightField;
            }
            set {
                this.rightField = value;
                this.RaisePropertyChanged("Right");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ReportPaperSize : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double heightField;
        
        private double widthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public double Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
                this.RaisePropertyChanged("Height");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
                this.RaisePropertyChanged("Width");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class PageSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ReportPaperSize paperSizeField;
        
        private ReportMargins marginsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ReportPaperSize PaperSize {
            get {
                return this.paperSizeField;
            }
            set {
                this.paperSizeField = value;
                this.RaisePropertyChanged("PaperSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ReportMargins Margins {
            get {
                return this.marginsField;
            }
            set {
                this.marginsField = value;
                this.RaisePropertyChanged("Margins");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class DataSourcePrompt : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string dataSourceIDField;
        
        private string promptField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DataSourceID {
            get {
                return this.dataSourceIDField;
            }
            set {
                this.dataSourceIDField = value;
                this.RaisePropertyChanged("DataSourceID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Prompt {
            get {
                return this.promptField;
            }
            set {
                this.promptField = value;
                this.RaisePropertyChanged("Prompt");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ValidValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string labelField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
                this.RaisePropertyChanged("Label");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ReportParameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private ParameterTypeEnum typeField;
        
        private bool typeFieldSpecified;
        
        private bool nullableField;
        
        private bool nullableFieldSpecified;
        
        private bool allowBlankField;
        
        private bool allowBlankFieldSpecified;
        
        private bool multiValueField;
        
        private bool multiValueFieldSpecified;
        
        private bool queryParameterField;
        
        private bool queryParameterFieldSpecified;
        
        private string promptField;
        
        private bool promptUserField;
        
        private bool promptUserFieldSpecified;
        
        private string[] dependenciesField;
        
        private bool validValuesQueryBasedField;
        
        private bool validValuesQueryBasedFieldSpecified;
        
        private ValidValue[] validValuesField;
        
        private bool defaultValuesQueryBasedField;
        
        private bool defaultValuesQueryBasedFieldSpecified;
        
        private string[] defaultValuesField;
        
        private ParameterStateEnum stateField;
        
        private bool stateFieldSpecified;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ParameterTypeEnum Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
                this.RaisePropertyChanged("TypeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Nullable {
            get {
                return this.nullableField;
            }
            set {
                this.nullableField = value;
                this.RaisePropertyChanged("Nullable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NullableSpecified {
            get {
                return this.nullableFieldSpecified;
            }
            set {
                this.nullableFieldSpecified = value;
                this.RaisePropertyChanged("NullableSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool AllowBlank {
            get {
                return this.allowBlankField;
            }
            set {
                this.allowBlankField = value;
                this.RaisePropertyChanged("AllowBlank");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowBlankSpecified {
            get {
                return this.allowBlankFieldSpecified;
            }
            set {
                this.allowBlankFieldSpecified = value;
                this.RaisePropertyChanged("AllowBlankSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool MultiValue {
            get {
                return this.multiValueField;
            }
            set {
                this.multiValueField = value;
                this.RaisePropertyChanged("MultiValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultiValueSpecified {
            get {
                return this.multiValueFieldSpecified;
            }
            set {
                this.multiValueFieldSpecified = value;
                this.RaisePropertyChanged("MultiValueSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool QueryParameter {
            get {
                return this.queryParameterField;
            }
            set {
                this.queryParameterField = value;
                this.RaisePropertyChanged("QueryParameter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QueryParameterSpecified {
            get {
                return this.queryParameterFieldSpecified;
            }
            set {
                this.queryParameterFieldSpecified = value;
                this.RaisePropertyChanged("QueryParameterSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Prompt {
            get {
                return this.promptField;
            }
            set {
                this.promptField = value;
                this.RaisePropertyChanged("Prompt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool PromptUser {
            get {
                return this.promptUserField;
            }
            set {
                this.promptUserField = value;
                this.RaisePropertyChanged("PromptUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PromptUserSpecified {
            get {
                return this.promptUserFieldSpecified;
            }
            set {
                this.promptUserFieldSpecified = value;
                this.RaisePropertyChanged("PromptUserSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Dependency")]
        public string[] Dependencies {
            get {
                return this.dependenciesField;
            }
            set {
                this.dependenciesField = value;
                this.RaisePropertyChanged("Dependencies");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool ValidValuesQueryBased {
            get {
                return this.validValuesQueryBasedField;
            }
            set {
                this.validValuesQueryBasedField = value;
                this.RaisePropertyChanged("ValidValuesQueryBased");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidValuesQueryBasedSpecified {
            get {
                return this.validValuesQueryBasedFieldSpecified;
            }
            set {
                this.validValuesQueryBasedFieldSpecified = value;
                this.RaisePropertyChanged("ValidValuesQueryBasedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        public ValidValue[] ValidValues {
            get {
                return this.validValuesField;
            }
            set {
                this.validValuesField = value;
                this.RaisePropertyChanged("ValidValues");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool DefaultValuesQueryBased {
            get {
                return this.defaultValuesQueryBasedField;
            }
            set {
                this.defaultValuesQueryBasedField = value;
                this.RaisePropertyChanged("DefaultValuesQueryBased");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultValuesQueryBasedSpecified {
            get {
                return this.defaultValuesQueryBasedFieldSpecified;
            }
            set {
                this.defaultValuesQueryBasedFieldSpecified = value;
                this.RaisePropertyChanged("DefaultValuesQueryBasedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=12)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Value")]
        public string[] DefaultValues {
            get {
                return this.defaultValuesField;
            }
            set {
                this.defaultValuesField = value;
                this.RaisePropertyChanged("DefaultValues");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public ParameterStateEnum State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified {
            get {
                return this.stateFieldSpecified;
            }
            set {
                this.stateFieldSpecified = value;
                this.RaisePropertyChanged("StateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum ParameterTypeEnum {
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        Float,
        
        /// <remarks/>
        String,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum ParameterStateEnum {
        
        /// <remarks/>
        HasValidValue,
        
        /// <remarks/>
        MissingValidValue,
        
        /// <remarks/>
        HasOutstandingDependencies,
        
        /// <remarks/>
        DynamicValuesUnavailable,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExecutionInfo2))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ExecutionInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool hasSnapshotField;
        
        private bool needsProcessingField;
        
        private bool allowQueryExecutionField;
        
        private bool credentialsRequiredField;
        
        private bool parametersRequiredField;
        
        private System.DateTime expirationDateTimeField;
        
        private System.DateTime executionDateTimeField;
        
        private int numPagesField;
        
        private ReportParameter[] parametersField;
        
        private DataSourcePrompt[] dataSourcePromptsField;
        
        private bool hasDocumentMapField;
        
        private string executionIDField;
        
        private string reportPathField;
        
        private string historyIDField;
        
        private PageSettings reportPageSettingsField;
        
        private int autoRefreshIntervalField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool HasSnapshot {
            get {
                return this.hasSnapshotField;
            }
            set {
                this.hasSnapshotField = value;
                this.RaisePropertyChanged("HasSnapshot");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool NeedsProcessing {
            get {
                return this.needsProcessingField;
            }
            set {
                this.needsProcessingField = value;
                this.RaisePropertyChanged("NeedsProcessing");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool AllowQueryExecution {
            get {
                return this.allowQueryExecutionField;
            }
            set {
                this.allowQueryExecutionField = value;
                this.RaisePropertyChanged("AllowQueryExecution");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool CredentialsRequired {
            get {
                return this.credentialsRequiredField;
            }
            set {
                this.credentialsRequiredField = value;
                this.RaisePropertyChanged("CredentialsRequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool ParametersRequired {
            get {
                return this.parametersRequiredField;
            }
            set {
                this.parametersRequiredField = value;
                this.RaisePropertyChanged("ParametersRequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime ExpirationDateTime {
            get {
                return this.expirationDateTimeField;
            }
            set {
                this.expirationDateTimeField = value;
                this.RaisePropertyChanged("ExpirationDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime ExecutionDateTime {
            get {
                return this.executionDateTimeField;
            }
            set {
                this.executionDateTimeField = value;
                this.RaisePropertyChanged("ExecutionDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int NumPages {
            get {
                return this.numPagesField;
            }
            set {
                this.numPagesField = value;
                this.RaisePropertyChanged("NumPages");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        public ReportParameter[] Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
                this.RaisePropertyChanged("Parameters");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public DataSourcePrompt[] DataSourcePrompts {
            get {
                return this.dataSourcePromptsField;
            }
            set {
                this.dataSourcePromptsField = value;
                this.RaisePropertyChanged("DataSourcePrompts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool HasDocumentMap {
            get {
                return this.hasDocumentMapField;
            }
            set {
                this.hasDocumentMapField = value;
                this.RaisePropertyChanged("HasDocumentMap");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string ExecutionID {
            get {
                return this.executionIDField;
            }
            set {
                this.executionIDField = value;
                this.RaisePropertyChanged("ExecutionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string ReportPath {
            get {
                return this.reportPathField;
            }
            set {
                this.reportPathField = value;
                this.RaisePropertyChanged("ReportPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string HistoryID {
            get {
                return this.historyIDField;
            }
            set {
                this.historyIDField = value;
                this.RaisePropertyChanged("HistoryID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public PageSettings ReportPageSettings {
            get {
                return this.reportPageSettingsField;
            }
            set {
                this.reportPageSettingsField = value;
                this.RaisePropertyChanged("ReportPageSettings");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public int AutoRefreshInterval {
            get {
                return this.autoRefreshIntervalField;
            }
            set {
                this.autoRefreshIntervalField = value;
                this.RaisePropertyChanged("AutoRefreshInterval");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ExecutionInfo2 : ExecutionInfo {
        
        private PageCountMode pageCountModeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public PageCountMode PageCountMode {
            get {
                return this.pageCountModeField;
            }
            set {
                this.pageCountModeField = value;
                this.RaisePropertyChanged("PageCountMode");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum PageCountMode {
        
        /// <remarks/>
        Actual,
        
        /// <remarks/>
        Estimate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public partial class ServerInfoHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string reportServerVersionNumberField;
        
        private string reportServerEditionField;
        
        private string reportServerVersionField;
        
        private string reportServerDateTimeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ReportServerVersionNumber {
            get {
                return this.reportServerVersionNumberField;
            }
            set {
                this.reportServerVersionNumberField = value;
                this.RaisePropertyChanged("ReportServerVersionNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ReportServerEdition {
            get {
                return this.reportServerEditionField;
            }
            set {
                this.reportServerEditionField = value;
                this.RaisePropertyChanged("ReportServerEdition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ReportServerVersion {
            get {
                return this.reportServerVersionField;
            }
            set {
                this.reportServerVersionField = value;
                this.RaisePropertyChanged("ReportServerVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ReportServerDateTime {
            get {
                return this.reportServerDateTimeField;
            }
            set {
                this.reportServerDateTimeField = value;
                this.RaisePropertyChanged("ReportServerDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSecureMethods", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ListSecureMethodsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        public ListSecureMethodsRequest() {
        }
        
        public ListSecureMethodsRequest(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListSecureMethodsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ListSecureMethodsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string[] ListSecureMethodsResult;
        
        public ListSecureMethodsResponse() {
        }
        
        public ListSecureMethodsResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, string[] ListSecureMethodsResult) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.ListSecureMethodsResult = ListSecureMethodsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReport", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Report;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string HistoryID;
        
        public LoadReportRequest() {
        }
        
        public LoadReportRequest(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Report = Report;
            this.HistoryID = HistoryID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo executionInfo;
        
        public LoadReportResponse() {
        }
        
        public LoadReportResponse(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo executionInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReport2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReport2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Report;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string HistoryID;
        
        public LoadReport2Request() {
        }
        
        public LoadReport2Request(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Report = Report;
            this.HistoryID = HistoryID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReport2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReport2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo2 executionInfo;
        
        public LoadReport2Response() {
        }
        
        public LoadReport2Response(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo2 executionInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportDefinition", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportDefinitionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Definition;
        
        public LoadReportDefinitionRequest() {
        }
        
        public LoadReportDefinitionRequest(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, byte[] Definition) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Definition = Definition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportDefinitionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportDefinitionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo executionInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public SSRSReporting.Execution.Warning[] warnings;
        
        public LoadReportDefinitionResponse() {
        }
        
        public LoadReportDefinitionResponse(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo executionInfo, SSRSReporting.Execution.Warning[] warnings) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
            this.warnings = warnings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportDefinition2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportDefinition2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Definition;
        
        public LoadReportDefinition2Request() {
        }
        
        public LoadReportDefinition2Request(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, byte[] Definition) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Definition = Definition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadReportDefinition2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadReportDefinition2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo2 executionInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public SSRSReporting.Execution.Warning[] warnings;
        
        public LoadReportDefinition2Response() {
        }
        
        public LoadReportDefinition2Response(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo2 executionInfo, SSRSReporting.Execution.Warning[] warnings) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
            this.warnings = warnings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionCredentials", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionCredentialsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.DataSourceCredentials[] Credentials;
        
        public SetExecutionCredentialsRequest() {
        }
        
        public SetExecutionCredentialsRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.DataSourceCredentials[] Credentials) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Credentials = Credentials;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionCredentialsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionCredentialsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo executionInfo;
        
        public SetExecutionCredentialsResponse() {
        }
        
        public SetExecutionCredentialsResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionCredentials2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionCredentials2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.DataSourceCredentials[] Credentials;
        
        public SetExecutionCredentials2Request() {
        }
        
        public SetExecutionCredentials2Request(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.DataSourceCredentials[] Credentials) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Credentials = Credentials;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionCredentials2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionCredentials2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo2 executionInfo;
        
        public SetExecutionCredentials2Response() {
        }
        
        public SetExecutionCredentials2Response(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo2 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionParameters", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionParametersRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ParameterValue[] Parameters;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string ParameterLanguage;
        
        public SetExecutionParametersRequest() {
        }
        
        public SetExecutionParametersRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.ParameterValue[] Parameters, string ParameterLanguage) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Parameters = Parameters;
            this.ParameterLanguage = ParameterLanguage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionParametersResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionParametersResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo executionInfo;
        
        public SetExecutionParametersResponse() {
        }
        
        public SetExecutionParametersResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionParameters2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionParameters2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ParameterValue[] Parameters;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string ParameterLanguage;
        
        public SetExecutionParameters2Request() {
        }
        
        public SetExecutionParameters2Request(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.ParameterValue[] Parameters, string ParameterLanguage) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Parameters = Parameters;
            this.ParameterLanguage = ParameterLanguage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetExecutionParameters2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SetExecutionParameters2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo2 executionInfo;
        
        public SetExecutionParameters2Response() {
        }
        
        public SetExecutionParameters2Response(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo2 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExecution", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ResetExecutionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        public ResetExecutionRequest() {
        }
        
        public ResetExecutionRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExecutionResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ResetExecutionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo executionInfo;
        
        public ResetExecutionResponse() {
        }
        
        public ResetExecutionResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExecution2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ResetExecution2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        public ResetExecution2Request() {
        }
        
        public ResetExecution2Request(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetExecution2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ResetExecution2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo2 executionInfo;
        
        public ResetExecution2Response() {
        }
        
        public ResetExecution2Response(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo2 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Render", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class RenderRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Format;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string DeviceInfo;
        
        public RenderRequest() {
        }
        
        public RenderRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Format = Format;
            this.DeviceInfo = DeviceInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RenderResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class RenderResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string Extension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string MimeType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=3)]
        public string Encoding;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=4)]
        public SSRSReporting.Execution.Warning[] Warnings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=5)]
        public string[] StreamIds;
        
        public RenderResponse() {
        }
        
        public RenderResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, byte[] Result, string Extension, string MimeType, string Encoding, SSRSReporting.Execution.Warning[] Warnings, string[] StreamIds) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Result = Result;
            this.Extension = Extension;
            this.MimeType = MimeType;
            this.Encoding = Encoding;
            this.Warnings = Warnings;
            this.StreamIds = StreamIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Render2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class Render2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Format;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string DeviceInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public SSRSReporting.Execution.PageCountMode PaginationMode;
        
        public Render2Request() {
        }
        
        public Render2Request(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo, SSRSReporting.Execution.PageCountMode PaginationMode) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Format = Format;
            this.DeviceInfo = DeviceInfo;
            this.PaginationMode = PaginationMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Render2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class Render2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string Extension;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string MimeType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=3)]
        public string Encoding;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=4)]
        public SSRSReporting.Execution.Warning[] Warnings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=5)]
        public string[] StreamIds;
        
        public Render2Response() {
        }
        
        public Render2Response(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, byte[] Result, string Extension, string MimeType, string Encoding, SSRSReporting.Execution.Warning[] Warnings, string[] StreamIds) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Result = Result;
            this.Extension = Extension;
            this.MimeType = MimeType;
            this.Encoding = Encoding;
            this.Warnings = Warnings;
            this.StreamIds = StreamIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RenderStream", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class RenderStreamRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Format;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string StreamID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string DeviceInfo;
        
        public RenderStreamRequest() {
        }
        
        public RenderStreamRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Format, string StreamID, string DeviceInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.Format = Format;
            this.StreamID = StreamID;
            this.DeviceInfo = DeviceInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RenderStreamResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class RenderStreamResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string Encoding;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string MimeType;
        
        public RenderStreamResponse() {
        }
        
        public RenderStreamResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, byte[] Result, string Encoding, string MimeType) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Result = Result;
            this.Encoding = Encoding;
            this.MimeType = MimeType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionInfo", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetExecutionInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        public GetExecutionInfoRequest() {
        }
        
        public GetExecutionInfoRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionInfoResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetExecutionInfoResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo executionInfo;
        
        public GetExecutionInfoResponse() {
        }
        
        public GetExecutionInfoResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionInfo2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetExecutionInfo2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        public GetExecutionInfo2Request() {
        }
        
        public GetExecutionInfo2Request(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExecutionInfo2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetExecutionInfo2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo2 executionInfo;
        
        public GetExecutionInfo2Response() {
        }
        
        public GetExecutionInfo2Response(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo2 executionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.executionInfo = executionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentMap", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetDocumentMapRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        public GetDocumentMapRequest() {
        }
        
        public GetDocumentMapRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDocumentMapResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetDocumentMapResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.DocumentMapNode result;
        
        public GetDocumentMapResponse() {
        }
        
        public GetDocumentMapResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.DocumentMapNode result) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadDrillthroughTarget", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadDrillthroughTargetRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string DrillthroughID;
        
        public LoadDrillthroughTargetRequest() {
        }
        
        public LoadDrillthroughTargetRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string DrillthroughID) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.DrillthroughID = DrillthroughID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadDrillthroughTargetResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadDrillthroughTargetResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo ExecutionInfo;
        
        public LoadDrillthroughTargetResponse() {
        }
        
        public LoadDrillthroughTargetResponse(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo ExecutionInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.ExecutionInfo = ExecutionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadDrillthroughTarget2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadDrillthroughTarget2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string DrillthroughID;
        
        public LoadDrillthroughTarget2Request() {
        }
        
        public LoadDrillthroughTarget2Request(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string DrillthroughID) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.DrillthroughID = DrillthroughID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadDrillthroughTarget2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LoadDrillthroughTarget2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.ExecutionInfo2 ExecutionInfo;
        
        public LoadDrillthroughTarget2Response() {
        }
        
        public LoadDrillthroughTarget2Response(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.ExecutionInfo2 ExecutionInfo) {
            this.ExecutionHeader = ExecutionHeader;
            this.ServerInfoHeader = ServerInfoHeader;
            this.ExecutionInfo = ExecutionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleItem", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ToggleItemRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string ToggleID;
        
        public ToggleItemRequest() {
        }
        
        public ToggleItemRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string ToggleID) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.ToggleID = ToggleID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleItemResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ToggleItemResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public bool Found;
        
        public ToggleItemResponse() {
        }
        
        public ToggleItemResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, bool Found) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Found = Found;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NavigateDocumentMap", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class NavigateDocumentMapRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string DocMapID;
        
        public NavigateDocumentMapRequest() {
        }
        
        public NavigateDocumentMapRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string DocMapID) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.DocMapID = DocMapID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NavigateDocumentMapResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class NavigateDocumentMapResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int PageNumber;
        
        public NavigateDocumentMapResponse() {
        }
        
        public NavigateDocumentMapResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, int PageNumber) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.PageNumber = PageNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NavigateBookmark", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class NavigateBookmarkRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string BookmarkID;
        
        public NavigateBookmarkRequest() {
        }
        
        public NavigateBookmarkRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string BookmarkID) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.BookmarkID = BookmarkID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NavigateBookmarkResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class NavigateBookmarkResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int PageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string UniqueName;
        
        public NavigateBookmarkResponse() {
        }
        
        public NavigateBookmarkResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, int PageNumber, string UniqueName) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.PageNumber = PageNumber;
            this.UniqueName = UniqueName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindString", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class FindStringRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int StartPage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public int EndPage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string FindValue;
        
        public FindStringRequest() {
        }
        
        public FindStringRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, int StartPage, int EndPage, string FindValue) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.StartPage = StartPage;
            this.EndPage = EndPage;
            this.FindValue = FindValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindStringResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class FindStringResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int PageNumber;
        
        public FindStringResponse() {
        }
        
        public FindStringResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, int PageNumber) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.PageNumber = PageNumber;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
    public enum SortDirectionEnum {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Ascending,
        
        /// <remarks/>
        Descending,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Sort", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SortRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string SortItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public SSRSReporting.Execution.SortDirectionEnum Direction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public bool Clear;
        
        public SortRequest() {
        }
        
        public SortRequest(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string SortItem, SSRSReporting.Execution.SortDirectionEnum Direction, bool Clear) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.SortItem = SortItem;
            this.Direction = Direction;
            this.Clear = Clear;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SortResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class SortResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int PageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string ReportItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public int NumPages;
        
        public SortResponse() {
        }
        
        public SortResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, int PageNumber, string ReportItem, int NumPages) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.PageNumber = PageNumber;
            this.ReportItem = ReportItem;
            this.NumPages = NumPages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Sort2", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class Sort2Request {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ExecutionHeader ExecutionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string SortItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public SSRSReporting.Execution.SortDirectionEnum Direction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public bool Clear;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=3)]
        public SSRSReporting.Execution.PageCountMode PaginationMode;
        
        public Sort2Request() {
        }
        
        public Sort2Request(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string SortItem, SSRSReporting.Execution.SortDirectionEnum Direction, bool Clear, SSRSReporting.Execution.PageCountMode PaginationMode) {
            this.ExecutionHeader = ExecutionHeader;
            this.TrustedUserHeader = TrustedUserHeader;
            this.SortItem = SortItem;
            this.Direction = Direction;
            this.Clear = Clear;
            this.PaginationMode = PaginationMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Sort2Response", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class Sort2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public int PageNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string ReportItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public SSRSReporting.Execution.ExecutionInfo2 ExecutionInfo;
        
        public Sort2Response() {
        }
        
        public Sort2Response(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, int PageNumber, string ReportItem, SSRSReporting.Execution.ExecutionInfo2 ExecutionInfo) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.PageNumber = PageNumber;
            this.ReportItem = ReportItem;
            this.ExecutionInfo = ExecutionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRenderResource", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetRenderResourceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string Format;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string DeviceInfo;
        
        public GetRenderResourceRequest() {
        }
        
        public GetRenderResourceRequest(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo) {
            this.TrustedUserHeader = TrustedUserHeader;
            this.Format = Format;
            this.DeviceInfo = DeviceInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRenderResourceResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class GetRenderResourceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string MimeType;
        
        public GetRenderResourceResponse() {
        }
        
        public GetRenderResourceResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, byte[] Result, string MimeType) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Result = Result;
            this.MimeType = MimeType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListRenderingExtensions", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ListRenderingExtensionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader;
        
        public ListRenderingExtensionsRequest() {
        }
        
        public ListRenderingExtensionsRequest(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            this.TrustedUserHeader = TrustedUserHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListRenderingExtensionsResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class ListRenderingExtensionsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public SSRSReporting.Execution.Extension[] Extensions;
        
        public ListRenderingExtensionsResponse() {
        }
        
        public ListRenderingExtensionsResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, SSRSReporting.Execution.Extension[] Extensions) {
            this.ServerInfoHeader = ServerInfoHeader;
            this.Extensions = Extensions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonUser", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LogonUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", Order=2)]
        public string authority;
        
        public LogonUserRequest() {
        }
        
        public LogonUserRequest(string userName, string password, string authority) {
            this.userName = userName;
            this.password = password;
            this.authority = authority;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogonUserResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LogonUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        public LogonUserResponse() {
        }
        
        public LogonUserResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader) {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Logoff", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LogoffRequest {
        
        public LogoffRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogoffResponse", WrapperNamespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices", IsWrapped=true)]
    public partial class LogoffResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2005/06/30/reporting/reportingservices")]
        public SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader;
        
        public LogoffResponse() {
        }
        
        public LogoffResponse(SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader) {
            this.ServerInfoHeader = ServerInfoHeader;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ReportExecutionServiceSoapChannel : SSRSReporting.Execution.ReportExecutionServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportExecutionServiceSoapClient : System.ServiceModel.ClientBase<SSRSReporting.Execution.ReportExecutionServiceSoap>, SSRSReporting.Execution.ReportExecutionServiceSoap {
        
        public ReportExecutionServiceSoapClient() {
        }
        
        public ReportExecutionServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportExecutionServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportExecutionServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportExecutionServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.ListSecureMethodsResponse SSRSReporting.Execution.ReportExecutionServiceSoap.ListSecureMethods(SSRSReporting.Execution.ListSecureMethodsRequest request) {
            return base.Channel.ListSecureMethods(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader ListSecureMethods(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, out string[] ListSecureMethodsResult) {
            SSRSReporting.Execution.ListSecureMethodsRequest inValue = new SSRSReporting.Execution.ListSecureMethodsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            SSRSReporting.Execution.ListSecureMethodsResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).ListSecureMethods(inValue);
            ListSecureMethodsResult = retVal.ListSecureMethodsResult;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.ListSecureMethodsResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.ListSecureMethodsAsync(SSRSReporting.Execution.ListSecureMethodsRequest request) {
            return base.Channel.ListSecureMethodsAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.ListSecureMethodsResponse> ListSecureMethodsAsync(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            SSRSReporting.Execution.ListSecureMethodsRequest inValue = new SSRSReporting.Execution.ListSecureMethodsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).ListSecureMethodsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.LoadReportResponse SSRSReporting.Execution.ReportExecutionServiceSoap.LoadReport(SSRSReporting.Execution.LoadReportRequest request) {
            return base.Channel.LoadReport(request);
        }
        
        public SSRSReporting.Execution.ExecutionHeader LoadReport(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID, out SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, out SSRSReporting.Execution.ExecutionInfo executionInfo) {
            SSRSReporting.Execution.LoadReportRequest inValue = new SSRSReporting.Execution.LoadReportRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Report = Report;
            inValue.HistoryID = HistoryID;
            SSRSReporting.Execution.LoadReportResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LoadReport(inValue);
            ServerInfoHeader = retVal.ServerInfoHeader;
            executionInfo = retVal.executionInfo;
            return retVal.ExecutionHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LoadReportResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.LoadReportAsync(SSRSReporting.Execution.LoadReportRequest request) {
            return base.Channel.LoadReportAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.LoadReportResponse> LoadReportAsync(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID) {
            SSRSReporting.Execution.LoadReportRequest inValue = new SSRSReporting.Execution.LoadReportRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Report = Report;
            inValue.HistoryID = HistoryID;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LoadReportAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.LoadReport2Response SSRSReporting.Execution.ReportExecutionServiceSoap.LoadReport2(SSRSReporting.Execution.LoadReport2Request request) {
            return base.Channel.LoadReport2(request);
        }
        
        public SSRSReporting.Execution.ExecutionHeader LoadReport2(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID, out SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, out SSRSReporting.Execution.ExecutionInfo2 executionInfo) {
            SSRSReporting.Execution.LoadReport2Request inValue = new SSRSReporting.Execution.LoadReport2Request();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Report = Report;
            inValue.HistoryID = HistoryID;
            SSRSReporting.Execution.LoadReport2Response retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LoadReport2(inValue);
            ServerInfoHeader = retVal.ServerInfoHeader;
            executionInfo = retVal.executionInfo;
            return retVal.ExecutionHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LoadReport2Response> SSRSReporting.Execution.ReportExecutionServiceSoap.LoadReport2Async(SSRSReporting.Execution.LoadReport2Request request) {
            return base.Channel.LoadReport2Async(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.LoadReport2Response> LoadReport2Async(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Report, string HistoryID) {
            SSRSReporting.Execution.LoadReport2Request inValue = new SSRSReporting.Execution.LoadReport2Request();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Report = Report;
            inValue.HistoryID = HistoryID;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LoadReport2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.LoadReportDefinitionResponse SSRSReporting.Execution.ReportExecutionServiceSoap.LoadReportDefinition(SSRSReporting.Execution.LoadReportDefinitionRequest request) {
            return base.Channel.LoadReportDefinition(request);
        }
        
        public SSRSReporting.Execution.ExecutionHeader LoadReportDefinition(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, byte[] Definition, out SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, out SSRSReporting.Execution.ExecutionInfo executionInfo, out SSRSReporting.Execution.Warning[] warnings) {
            SSRSReporting.Execution.LoadReportDefinitionRequest inValue = new SSRSReporting.Execution.LoadReportDefinitionRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Definition = Definition;
            SSRSReporting.Execution.LoadReportDefinitionResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LoadReportDefinition(inValue);
            ServerInfoHeader = retVal.ServerInfoHeader;
            executionInfo = retVal.executionInfo;
            warnings = retVal.warnings;
            return retVal.ExecutionHeader;
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.LoadReportDefinitionResponse> LoadReportDefinitionAsync(SSRSReporting.Execution.LoadReportDefinitionRequest request) {
            return base.Channel.LoadReportDefinitionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.LoadReportDefinition2Response SSRSReporting.Execution.ReportExecutionServiceSoap.LoadReportDefinition2(SSRSReporting.Execution.LoadReportDefinition2Request request) {
            return base.Channel.LoadReportDefinition2(request);
        }
        
        public SSRSReporting.Execution.ExecutionHeader LoadReportDefinition2(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, byte[] Definition, out SSRSReporting.Execution.ServerInfoHeader ServerInfoHeader, out SSRSReporting.Execution.ExecutionInfo2 executionInfo, out SSRSReporting.Execution.Warning[] warnings) {
            SSRSReporting.Execution.LoadReportDefinition2Request inValue = new SSRSReporting.Execution.LoadReportDefinition2Request();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Definition = Definition;
            SSRSReporting.Execution.LoadReportDefinition2Response retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LoadReportDefinition2(inValue);
            ServerInfoHeader = retVal.ServerInfoHeader;
            executionInfo = retVal.executionInfo;
            warnings = retVal.warnings;
            return retVal.ExecutionHeader;
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.LoadReportDefinition2Response> LoadReportDefinition2Async(SSRSReporting.Execution.LoadReportDefinition2Request request) {
            return base.Channel.LoadReportDefinition2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.SetExecutionCredentialsResponse SSRSReporting.Execution.ReportExecutionServiceSoap.SetExecutionCredentials(SSRSReporting.Execution.SetExecutionCredentialsRequest request) {
            return base.Channel.SetExecutionCredentials(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader SetExecutionCredentials(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.DataSourceCredentials[] Credentials, out SSRSReporting.Execution.ExecutionInfo executionInfo) {
            SSRSReporting.Execution.SetExecutionCredentialsRequest inValue = new SSRSReporting.Execution.SetExecutionCredentialsRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Credentials = Credentials;
            SSRSReporting.Execution.SetExecutionCredentialsResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).SetExecutionCredentials(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionCredentialsResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.SetExecutionCredentialsAsync(SSRSReporting.Execution.SetExecutionCredentialsRequest request) {
            return base.Channel.SetExecutionCredentialsAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionCredentialsResponse> SetExecutionCredentialsAsync(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.DataSourceCredentials[] Credentials) {
            SSRSReporting.Execution.SetExecutionCredentialsRequest inValue = new SSRSReporting.Execution.SetExecutionCredentialsRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Credentials = Credentials;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).SetExecutionCredentialsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.SetExecutionCredentials2Response SSRSReporting.Execution.ReportExecutionServiceSoap.SetExecutionCredentials2(SSRSReporting.Execution.SetExecutionCredentials2Request request) {
            return base.Channel.SetExecutionCredentials2(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader SetExecutionCredentials2(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.DataSourceCredentials[] Credentials, out SSRSReporting.Execution.ExecutionInfo2 executionInfo) {
            SSRSReporting.Execution.SetExecutionCredentials2Request inValue = new SSRSReporting.Execution.SetExecutionCredentials2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Credentials = Credentials;
            SSRSReporting.Execution.SetExecutionCredentials2Response retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).SetExecutionCredentials2(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionCredentials2Response> SSRSReporting.Execution.ReportExecutionServiceSoap.SetExecutionCredentials2Async(SSRSReporting.Execution.SetExecutionCredentials2Request request) {
            return base.Channel.SetExecutionCredentials2Async(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionCredentials2Response> SetExecutionCredentials2Async(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.DataSourceCredentials[] Credentials) {
            SSRSReporting.Execution.SetExecutionCredentials2Request inValue = new SSRSReporting.Execution.SetExecutionCredentials2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Credentials = Credentials;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).SetExecutionCredentials2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.SetExecutionParametersResponse SSRSReporting.Execution.ReportExecutionServiceSoap.SetExecutionParameters(SSRSReporting.Execution.SetExecutionParametersRequest request) {
            return base.Channel.SetExecutionParameters(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader SetExecutionParameters(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.ParameterValue[] Parameters, string ParameterLanguage, out SSRSReporting.Execution.ExecutionInfo executionInfo) {
            SSRSReporting.Execution.SetExecutionParametersRequest inValue = new SSRSReporting.Execution.SetExecutionParametersRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Parameters = Parameters;
            inValue.ParameterLanguage = ParameterLanguage;
            SSRSReporting.Execution.SetExecutionParametersResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).SetExecutionParameters(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionParametersResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.SetExecutionParametersAsync(SSRSReporting.Execution.SetExecutionParametersRequest request) {
            return base.Channel.SetExecutionParametersAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionParametersResponse> SetExecutionParametersAsync(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.ParameterValue[] Parameters, string ParameterLanguage) {
            SSRSReporting.Execution.SetExecutionParametersRequest inValue = new SSRSReporting.Execution.SetExecutionParametersRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Parameters = Parameters;
            inValue.ParameterLanguage = ParameterLanguage;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).SetExecutionParametersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.SetExecutionParameters2Response SSRSReporting.Execution.ReportExecutionServiceSoap.SetExecutionParameters2(SSRSReporting.Execution.SetExecutionParameters2Request request) {
            return base.Channel.SetExecutionParameters2(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader SetExecutionParameters2(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.ParameterValue[] Parameters, string ParameterLanguage, out SSRSReporting.Execution.ExecutionInfo2 executionInfo) {
            SSRSReporting.Execution.SetExecutionParameters2Request inValue = new SSRSReporting.Execution.SetExecutionParameters2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Parameters = Parameters;
            inValue.ParameterLanguage = ParameterLanguage;
            SSRSReporting.Execution.SetExecutionParameters2Response retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).SetExecutionParameters2(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionParameters2Response> SSRSReporting.Execution.ReportExecutionServiceSoap.SetExecutionParameters2Async(SSRSReporting.Execution.SetExecutionParameters2Request request) {
            return base.Channel.SetExecutionParameters2Async(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.SetExecutionParameters2Response> SetExecutionParameters2Async(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, SSRSReporting.Execution.ParameterValue[] Parameters, string ParameterLanguage) {
            SSRSReporting.Execution.SetExecutionParameters2Request inValue = new SSRSReporting.Execution.SetExecutionParameters2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Parameters = Parameters;
            inValue.ParameterLanguage = ParameterLanguage;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).SetExecutionParameters2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.ResetExecutionResponse SSRSReporting.Execution.ReportExecutionServiceSoap.ResetExecution(SSRSReporting.Execution.ResetExecutionRequest request) {
            return base.Channel.ResetExecution(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader ResetExecution(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, out SSRSReporting.Execution.ExecutionInfo executionInfo) {
            SSRSReporting.Execution.ResetExecutionRequest inValue = new SSRSReporting.Execution.ResetExecutionRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            SSRSReporting.Execution.ResetExecutionResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).ResetExecution(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.ResetExecutionResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.ResetExecutionAsync(SSRSReporting.Execution.ResetExecutionRequest request) {
            return base.Channel.ResetExecutionAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.ResetExecutionResponse> ResetExecutionAsync(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            SSRSReporting.Execution.ResetExecutionRequest inValue = new SSRSReporting.Execution.ResetExecutionRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).ResetExecutionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.ResetExecution2Response SSRSReporting.Execution.ReportExecutionServiceSoap.ResetExecution2(SSRSReporting.Execution.ResetExecution2Request request) {
            return base.Channel.ResetExecution2(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader ResetExecution2(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, out SSRSReporting.Execution.ExecutionInfo2 executionInfo) {
            SSRSReporting.Execution.ResetExecution2Request inValue = new SSRSReporting.Execution.ResetExecution2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            SSRSReporting.Execution.ResetExecution2Response retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).ResetExecution2(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.ResetExecution2Response> SSRSReporting.Execution.ReportExecutionServiceSoap.ResetExecution2Async(SSRSReporting.Execution.ResetExecution2Request request) {
            return base.Channel.ResetExecution2Async(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.ResetExecution2Response> ResetExecution2Async(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            SSRSReporting.Execution.ResetExecution2Request inValue = new SSRSReporting.Execution.ResetExecution2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).ResetExecution2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.RenderResponse SSRSReporting.Execution.ReportExecutionServiceSoap.Render(SSRSReporting.Execution.RenderRequest request) {
            return base.Channel.Render(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader Render(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo, out byte[] Result, out string Extension, out string MimeType, out string Encoding, out SSRSReporting.Execution.Warning[] Warnings, out string[] StreamIds) {
            SSRSReporting.Execution.RenderRequest inValue = new SSRSReporting.Execution.RenderRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Format = Format;
            inValue.DeviceInfo = DeviceInfo;
            SSRSReporting.Execution.RenderResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).Render(inValue);
            Result = retVal.Result;
            Extension = retVal.Extension;
            MimeType = retVal.MimeType;
            Encoding = retVal.Encoding;
            Warnings = retVal.Warnings;
            StreamIds = retVal.StreamIds;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.RenderResponse> RenderAsync(SSRSReporting.Execution.RenderRequest request) {
            return base.Channel.RenderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.Render2Response SSRSReporting.Execution.ReportExecutionServiceSoap.Render2(SSRSReporting.Execution.Render2Request request) {
            return base.Channel.Render2(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader Render2(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo, SSRSReporting.Execution.PageCountMode PaginationMode, out byte[] Result, out string Extension, out string MimeType, out string Encoding, out SSRSReporting.Execution.Warning[] Warnings, out string[] StreamIds) {
            SSRSReporting.Execution.Render2Request inValue = new SSRSReporting.Execution.Render2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Format = Format;
            inValue.DeviceInfo = DeviceInfo;
            inValue.PaginationMode = PaginationMode;
            SSRSReporting.Execution.Render2Response retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).Render2(inValue);
            Result = retVal.Result;
            Extension = retVal.Extension;
            MimeType = retVal.MimeType;
            Encoding = retVal.Encoding;
            Warnings = retVal.Warnings;
            StreamIds = retVal.StreamIds;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.Render2Response> Render2Async(SSRSReporting.Execution.Render2Request request) {
            return base.Channel.Render2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.RenderStreamResponse SSRSReporting.Execution.ReportExecutionServiceSoap.RenderStream(SSRSReporting.Execution.RenderStreamRequest request) {
            return base.Channel.RenderStream(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader RenderStream(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Format, string StreamID, string DeviceInfo, out byte[] Result, out string Encoding, out string MimeType) {
            SSRSReporting.Execution.RenderStreamRequest inValue = new SSRSReporting.Execution.RenderStreamRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Format = Format;
            inValue.StreamID = StreamID;
            inValue.DeviceInfo = DeviceInfo;
            SSRSReporting.Execution.RenderStreamResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).RenderStream(inValue);
            Result = retVal.Result;
            Encoding = retVal.Encoding;
            MimeType = retVal.MimeType;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.RenderStreamResponse> RenderStreamAsync(SSRSReporting.Execution.RenderStreamRequest request) {
            return base.Channel.RenderStreamAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.GetExecutionInfoResponse SSRSReporting.Execution.ReportExecutionServiceSoap.GetExecutionInfo(SSRSReporting.Execution.GetExecutionInfoRequest request) {
            return base.Channel.GetExecutionInfo(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader GetExecutionInfo(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, out SSRSReporting.Execution.ExecutionInfo executionInfo) {
            SSRSReporting.Execution.GetExecutionInfoRequest inValue = new SSRSReporting.Execution.GetExecutionInfoRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            SSRSReporting.Execution.GetExecutionInfoResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).GetExecutionInfo(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.GetExecutionInfoResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.GetExecutionInfoAsync(SSRSReporting.Execution.GetExecutionInfoRequest request) {
            return base.Channel.GetExecutionInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.GetExecutionInfoResponse> GetExecutionInfoAsync(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            SSRSReporting.Execution.GetExecutionInfoRequest inValue = new SSRSReporting.Execution.GetExecutionInfoRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).GetExecutionInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.GetExecutionInfo2Response SSRSReporting.Execution.ReportExecutionServiceSoap.GetExecutionInfo2(SSRSReporting.Execution.GetExecutionInfo2Request request) {
            return base.Channel.GetExecutionInfo2(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader GetExecutionInfo2(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, out SSRSReporting.Execution.ExecutionInfo2 executionInfo) {
            SSRSReporting.Execution.GetExecutionInfo2Request inValue = new SSRSReporting.Execution.GetExecutionInfo2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            SSRSReporting.Execution.GetExecutionInfo2Response retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).GetExecutionInfo2(inValue);
            executionInfo = retVal.executionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.GetExecutionInfo2Response> SSRSReporting.Execution.ReportExecutionServiceSoap.GetExecutionInfo2Async(SSRSReporting.Execution.GetExecutionInfo2Request request) {
            return base.Channel.GetExecutionInfo2Async(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.GetExecutionInfo2Response> GetExecutionInfo2Async(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            SSRSReporting.Execution.GetExecutionInfo2Request inValue = new SSRSReporting.Execution.GetExecutionInfo2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).GetExecutionInfo2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.GetDocumentMapResponse SSRSReporting.Execution.ReportExecutionServiceSoap.GetDocumentMap(SSRSReporting.Execution.GetDocumentMapRequest request) {
            return base.Channel.GetDocumentMap(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader GetDocumentMap(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, out SSRSReporting.Execution.DocumentMapNode result) {
            SSRSReporting.Execution.GetDocumentMapRequest inValue = new SSRSReporting.Execution.GetDocumentMapRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            SSRSReporting.Execution.GetDocumentMapResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).GetDocumentMap(inValue);
            result = retVal.result;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.GetDocumentMapResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.GetDocumentMapAsync(SSRSReporting.Execution.GetDocumentMapRequest request) {
            return base.Channel.GetDocumentMapAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.GetDocumentMapResponse> GetDocumentMapAsync(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            SSRSReporting.Execution.GetDocumentMapRequest inValue = new SSRSReporting.Execution.GetDocumentMapRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).GetDocumentMapAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.LoadDrillthroughTargetResponse SSRSReporting.Execution.ReportExecutionServiceSoap.LoadDrillthroughTarget(SSRSReporting.Execution.LoadDrillthroughTargetRequest request) {
            return base.Channel.LoadDrillthroughTarget(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader LoadDrillthroughTarget(ref SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string DrillthroughID, out SSRSReporting.Execution.ExecutionInfo ExecutionInfo) {
            SSRSReporting.Execution.LoadDrillthroughTargetRequest inValue = new SSRSReporting.Execution.LoadDrillthroughTargetRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DrillthroughID = DrillthroughID;
            SSRSReporting.Execution.LoadDrillthroughTargetResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LoadDrillthroughTarget(inValue);
            ExecutionHeader = retVal.ExecutionHeader;
            ExecutionInfo = retVal.ExecutionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LoadDrillthroughTargetResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.LoadDrillthroughTargetAsync(SSRSReporting.Execution.LoadDrillthroughTargetRequest request) {
            return base.Channel.LoadDrillthroughTargetAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.LoadDrillthroughTargetResponse> LoadDrillthroughTargetAsync(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string DrillthroughID) {
            SSRSReporting.Execution.LoadDrillthroughTargetRequest inValue = new SSRSReporting.Execution.LoadDrillthroughTargetRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DrillthroughID = DrillthroughID;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LoadDrillthroughTargetAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.LoadDrillthroughTarget2Response SSRSReporting.Execution.ReportExecutionServiceSoap.LoadDrillthroughTarget2(SSRSReporting.Execution.LoadDrillthroughTarget2Request request) {
            return base.Channel.LoadDrillthroughTarget2(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader LoadDrillthroughTarget2(ref SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string DrillthroughID, out SSRSReporting.Execution.ExecutionInfo2 ExecutionInfo) {
            SSRSReporting.Execution.LoadDrillthroughTarget2Request inValue = new SSRSReporting.Execution.LoadDrillthroughTarget2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DrillthroughID = DrillthroughID;
            SSRSReporting.Execution.LoadDrillthroughTarget2Response retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LoadDrillthroughTarget2(inValue);
            ExecutionHeader = retVal.ExecutionHeader;
            ExecutionInfo = retVal.ExecutionInfo;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LoadDrillthroughTarget2Response> SSRSReporting.Execution.ReportExecutionServiceSoap.LoadDrillthroughTarget2Async(SSRSReporting.Execution.LoadDrillthroughTarget2Request request) {
            return base.Channel.LoadDrillthroughTarget2Async(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.LoadDrillthroughTarget2Response> LoadDrillthroughTarget2Async(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string DrillthroughID) {
            SSRSReporting.Execution.LoadDrillthroughTarget2Request inValue = new SSRSReporting.Execution.LoadDrillthroughTarget2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DrillthroughID = DrillthroughID;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LoadDrillthroughTarget2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.ToggleItemResponse SSRSReporting.Execution.ReportExecutionServiceSoap.ToggleItem(SSRSReporting.Execution.ToggleItemRequest request) {
            return base.Channel.ToggleItem(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader ToggleItem(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string ToggleID, out bool Found) {
            SSRSReporting.Execution.ToggleItemRequest inValue = new SSRSReporting.Execution.ToggleItemRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ToggleID = ToggleID;
            SSRSReporting.Execution.ToggleItemResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).ToggleItem(inValue);
            Found = retVal.Found;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.ToggleItemResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.ToggleItemAsync(SSRSReporting.Execution.ToggleItemRequest request) {
            return base.Channel.ToggleItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.ToggleItemResponse> ToggleItemAsync(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string ToggleID) {
            SSRSReporting.Execution.ToggleItemRequest inValue = new SSRSReporting.Execution.ToggleItemRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.ToggleID = ToggleID;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).ToggleItemAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.NavigateDocumentMapResponse SSRSReporting.Execution.ReportExecutionServiceSoap.NavigateDocumentMap(SSRSReporting.Execution.NavigateDocumentMapRequest request) {
            return base.Channel.NavigateDocumentMap(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader NavigateDocumentMap(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string DocMapID, out int PageNumber) {
            SSRSReporting.Execution.NavigateDocumentMapRequest inValue = new SSRSReporting.Execution.NavigateDocumentMapRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DocMapID = DocMapID;
            SSRSReporting.Execution.NavigateDocumentMapResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).NavigateDocumentMap(inValue);
            PageNumber = retVal.PageNumber;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.NavigateDocumentMapResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.NavigateDocumentMapAsync(SSRSReporting.Execution.NavigateDocumentMapRequest request) {
            return base.Channel.NavigateDocumentMapAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.NavigateDocumentMapResponse> NavigateDocumentMapAsync(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string DocMapID) {
            SSRSReporting.Execution.NavigateDocumentMapRequest inValue = new SSRSReporting.Execution.NavigateDocumentMapRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.DocMapID = DocMapID;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).NavigateDocumentMapAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.NavigateBookmarkResponse SSRSReporting.Execution.ReportExecutionServiceSoap.NavigateBookmark(SSRSReporting.Execution.NavigateBookmarkRequest request) {
            return base.Channel.NavigateBookmark(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader NavigateBookmark(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string BookmarkID, out int PageNumber, out string UniqueName) {
            SSRSReporting.Execution.NavigateBookmarkRequest inValue = new SSRSReporting.Execution.NavigateBookmarkRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.BookmarkID = BookmarkID;
            SSRSReporting.Execution.NavigateBookmarkResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).NavigateBookmark(inValue);
            PageNumber = retVal.PageNumber;
            UniqueName = retVal.UniqueName;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.NavigateBookmarkResponse> NavigateBookmarkAsync(SSRSReporting.Execution.NavigateBookmarkRequest request) {
            return base.Channel.NavigateBookmarkAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.FindStringResponse SSRSReporting.Execution.ReportExecutionServiceSoap.FindString(SSRSReporting.Execution.FindStringRequest request) {
            return base.Channel.FindString(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader FindString(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, int StartPage, int EndPage, string FindValue, out int PageNumber) {
            SSRSReporting.Execution.FindStringRequest inValue = new SSRSReporting.Execution.FindStringRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.StartPage = StartPage;
            inValue.EndPage = EndPage;
            inValue.FindValue = FindValue;
            SSRSReporting.Execution.FindStringResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).FindString(inValue);
            PageNumber = retVal.PageNumber;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.FindStringResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.FindStringAsync(SSRSReporting.Execution.FindStringRequest request) {
            return base.Channel.FindStringAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.FindStringResponse> FindStringAsync(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, int StartPage, int EndPage, string FindValue) {
            SSRSReporting.Execution.FindStringRequest inValue = new SSRSReporting.Execution.FindStringRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.StartPage = StartPage;
            inValue.EndPage = EndPage;
            inValue.FindValue = FindValue;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).FindStringAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.SortResponse SSRSReporting.Execution.ReportExecutionServiceSoap.Sort(SSRSReporting.Execution.SortRequest request) {
            return base.Channel.Sort(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader Sort(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string SortItem, SSRSReporting.Execution.SortDirectionEnum Direction, bool Clear, out int PageNumber, out string ReportItem, out int NumPages) {
            SSRSReporting.Execution.SortRequest inValue = new SSRSReporting.Execution.SortRequest();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SortItem = SortItem;
            inValue.Direction = Direction;
            inValue.Clear = Clear;
            SSRSReporting.Execution.SortResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).Sort(inValue);
            PageNumber = retVal.PageNumber;
            ReportItem = retVal.ReportItem;
            NumPages = retVal.NumPages;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.SortResponse> SortAsync(SSRSReporting.Execution.SortRequest request) {
            return base.Channel.SortAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.Sort2Response SSRSReporting.Execution.ReportExecutionServiceSoap.Sort2(SSRSReporting.Execution.Sort2Request request) {
            return base.Channel.Sort2(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader Sort2(SSRSReporting.Execution.ExecutionHeader ExecutionHeader, SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string SortItem, SSRSReporting.Execution.SortDirectionEnum Direction, bool Clear, SSRSReporting.Execution.PageCountMode PaginationMode, out int PageNumber, out string ReportItem, out SSRSReporting.Execution.ExecutionInfo2 ExecutionInfo) {
            SSRSReporting.Execution.Sort2Request inValue = new SSRSReporting.Execution.Sort2Request();
            inValue.ExecutionHeader = ExecutionHeader;
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.SortItem = SortItem;
            inValue.Direction = Direction;
            inValue.Clear = Clear;
            inValue.PaginationMode = PaginationMode;
            SSRSReporting.Execution.Sort2Response retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).Sort2(inValue);
            PageNumber = retVal.PageNumber;
            ReportItem = retVal.ReportItem;
            ExecutionInfo = retVal.ExecutionInfo;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.Sort2Response> Sort2Async(SSRSReporting.Execution.Sort2Request request) {
            return base.Channel.Sort2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.GetRenderResourceResponse SSRSReporting.Execution.ReportExecutionServiceSoap.GetRenderResource(SSRSReporting.Execution.GetRenderResourceRequest request) {
            return base.Channel.GetRenderResource(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader GetRenderResource(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, string Format, string DeviceInfo, out byte[] Result, out string MimeType) {
            SSRSReporting.Execution.GetRenderResourceRequest inValue = new SSRSReporting.Execution.GetRenderResourceRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            inValue.Format = Format;
            inValue.DeviceInfo = DeviceInfo;
            SSRSReporting.Execution.GetRenderResourceResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).GetRenderResource(inValue);
            Result = retVal.Result;
            MimeType = retVal.MimeType;
            return retVal.ServerInfoHeader;
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.GetRenderResourceResponse> GetRenderResourceAsync(SSRSReporting.Execution.GetRenderResourceRequest request) {
            return base.Channel.GetRenderResourceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.ListRenderingExtensionsResponse SSRSReporting.Execution.ReportExecutionServiceSoap.ListRenderingExtensions(SSRSReporting.Execution.ListRenderingExtensionsRequest request) {
            return base.Channel.ListRenderingExtensions(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader ListRenderingExtensions(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader, out SSRSReporting.Execution.Extension[] Extensions) {
            SSRSReporting.Execution.ListRenderingExtensionsRequest inValue = new SSRSReporting.Execution.ListRenderingExtensionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            SSRSReporting.Execution.ListRenderingExtensionsResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).ListRenderingExtensions(inValue);
            Extensions = retVal.Extensions;
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.ListRenderingExtensionsResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.ListRenderingExtensionsAsync(SSRSReporting.Execution.ListRenderingExtensionsRequest request) {
            return base.Channel.ListRenderingExtensionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.ListRenderingExtensionsResponse> ListRenderingExtensionsAsync(SSRSReporting.Execution.TrustedUserHeader TrustedUserHeader) {
            SSRSReporting.Execution.ListRenderingExtensionsRequest inValue = new SSRSReporting.Execution.ListRenderingExtensionsRequest();
            inValue.TrustedUserHeader = TrustedUserHeader;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).ListRenderingExtensionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.LogonUserResponse SSRSReporting.Execution.ReportExecutionServiceSoap.LogonUser(SSRSReporting.Execution.LogonUserRequest request) {
            return base.Channel.LogonUser(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader LogonUser(string userName, string password, string authority) {
            SSRSReporting.Execution.LogonUserRequest inValue = new SSRSReporting.Execution.LogonUserRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.authority = authority;
            SSRSReporting.Execution.LogonUserResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LogonUser(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LogonUserResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.LogonUserAsync(SSRSReporting.Execution.LogonUserRequest request) {
            return base.Channel.LogonUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.LogonUserResponse> LogonUserAsync(string userName, string password, string authority) {
            SSRSReporting.Execution.LogonUserRequest inValue = new SSRSReporting.Execution.LogonUserRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.authority = authority;
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LogonUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SSRSReporting.Execution.LogoffResponse SSRSReporting.Execution.ReportExecutionServiceSoap.Logoff(SSRSReporting.Execution.LogoffRequest request) {
            return base.Channel.Logoff(request);
        }
        
        public SSRSReporting.Execution.ServerInfoHeader Logoff() {
            SSRSReporting.Execution.LogoffRequest inValue = new SSRSReporting.Execution.LogoffRequest();
            SSRSReporting.Execution.LogoffResponse retVal = ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).Logoff(inValue);
            return retVal.ServerInfoHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SSRSReporting.Execution.LogoffResponse> SSRSReporting.Execution.ReportExecutionServiceSoap.LogoffAsync(SSRSReporting.Execution.LogoffRequest request) {
            return base.Channel.LogoffAsync(request);
        }
        
        public System.Threading.Tasks.Task<SSRSReporting.Execution.LogoffResponse> LogoffAsync() {
            SSRSReporting.Execution.LogoffRequest inValue = new SSRSReporting.Execution.LogoffRequest();
            return ((SSRSReporting.Execution.ReportExecutionServiceSoap)(this)).LogoffAsync(inValue);
        }
    }
}
